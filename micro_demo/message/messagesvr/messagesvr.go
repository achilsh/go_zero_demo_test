// Code generated by goctl. DO NOT EDIT!
// Source: message.proto

package messagesvr

import (
	"context"

	"micro_demo/message/message"

	"github.com/tal-tech/go-zero/zrpc"
)

type (
	MessageReq  = message.MessageReq
	MessageResp = message.MessageResp

	MessageSvr interface {
		GetMessage(ctx context.Context, in *MessageReq) (*MessageResp, error)
	}

	defaultMessageSvr struct {
		cli zrpc.Client
	}
)

func NewMessageSvr(cli zrpc.Client) MessageSvr {
	return &defaultMessageSvr{
		cli: cli,
	}
}

func (m *defaultMessageSvr) GetMessage(ctx context.Context, in *MessageReq) (*MessageResp, error) {
	client := message.NewMessageSvrClient(m.cli.Conn())
	return client.GetMessage(ctx, in)
}
