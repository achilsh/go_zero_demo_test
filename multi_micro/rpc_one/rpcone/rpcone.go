// Code generated by goctl. DO NOT EDIT!
// Source: add.proto

package rpcone

import (
	"context"

	"multi_micro/rpc_one/rpc_one"

	"github.com/tal-tech/go-zero/zrpc"
)

type (
	RpcOneResp = rpc_one.RpcOneResp
	RpcOneReq  = rpc_one.RpcOneReq

	RpcOne interface {
		Greet(ctx context.Context, in *RpcOneReq) (*RpcOneResp, error)
	}

	defaultRpcOne struct {
		cli zrpc.Client
	}
)

func NewRpcOne(cli zrpc.Client) RpcOne {
	return &defaultRpcOne{
		cli: cli,
	}
}

func (m *defaultRpcOne) Greet(ctx context.Context, in *RpcOneReq) (*RpcOneResp, error) {
	client := rpc_one.NewRpcOneClient(m.cli.Conn())
	return client.Greet(ctx, in)
}
